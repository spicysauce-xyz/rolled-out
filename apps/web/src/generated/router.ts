/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../routes/__root'
import { Route as AppRouteImport } from './../routes/_app/route'
import { Route as authSignupImport } from './../routes/(auth)/signup'
import { Route as authLoginImport } from './../routes/(auth)/login'
import { Route as AppDashboardRouteImport } from './../routes/_app/_dashboard/route'
import { Route as AppDashboardIndexImport } from './../routes/_app/_dashboard/index'
import { Route as AppEditorIdImport } from './../routes/_app/editor/$id'
import { Route as AppDashboardUpdatesImport } from './../routes/_app/_dashboard/updates'
import { Route as AppDashboardSettingsImport } from './../routes/_app/_dashboard/settings'
import { Route as AppDashboardAccountImport } from './../routes/_app/_dashboard/account'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppDashboardRouteRoute = AppDashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDashboardIndexRoute = AppDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppDashboardRouteRoute,
} as any)

const AppEditorIdRoute = AppEditorIdImport.update({
  id: '/editor/$id',
  path: '/editor/$id',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDashboardUpdatesRoute = AppDashboardUpdatesImport.update({
  id: '/updates',
  path: '/updates',
  getParentRoute: () => AppDashboardRouteRoute,
} as any)

const AppDashboardSettingsRoute = AppDashboardSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppDashboardRouteRoute,
} as any)

const AppDashboardAccountRoute = AppDashboardAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AppDashboardRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/_dashboard': {
      id: '/_app/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof rootRoute
    }
    '/_app/_dashboard/account': {
      id: '/_app/_dashboard/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AppDashboardAccountImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/_app/_dashboard/settings': {
      id: '/_app/_dashboard/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppDashboardSettingsImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/_app/_dashboard/updates': {
      id: '/_app/_dashboard/updates'
      path: '/updates'
      fullPath: '/updates'
      preLoaderRoute: typeof AppDashboardUpdatesImport
      parentRoute: typeof AppDashboardRouteImport
    }
    '/_app/editor/$id': {
      id: '/_app/editor/$id'
      path: '/editor/$id'
      fullPath: '/editor/$id'
      preLoaderRoute: typeof AppEditorIdImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/_dashboard/': {
      id: '/_app/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppDashboardIndexImport
      parentRoute: typeof AppDashboardRouteImport
    }
  }
}

// Create and export the route tree

interface AppDashboardRouteRouteChildren {
  AppDashboardAccountRoute: typeof AppDashboardAccountRoute
  AppDashboardSettingsRoute: typeof AppDashboardSettingsRoute
  AppDashboardUpdatesRoute: typeof AppDashboardUpdatesRoute
  AppDashboardIndexRoute: typeof AppDashboardIndexRoute
}

const AppDashboardRouteRouteChildren: AppDashboardRouteRouteChildren = {
  AppDashboardAccountRoute: AppDashboardAccountRoute,
  AppDashboardSettingsRoute: AppDashboardSettingsRoute,
  AppDashboardUpdatesRoute: AppDashboardUpdatesRoute,
  AppDashboardIndexRoute: AppDashboardIndexRoute,
}

const AppDashboardRouteRouteWithChildren =
  AppDashboardRouteRoute._addFileChildren(AppDashboardRouteRouteChildren)

interface AppRouteRouteChildren {
  AppDashboardRouteRoute: typeof AppDashboardRouteRouteWithChildren
  AppEditorIdRoute: typeof AppEditorIdRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppDashboardRouteRoute: AppDashboardRouteRouteWithChildren,
  AppEditorIdRoute: AppEditorIdRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppDashboardRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/account': typeof AppDashboardAccountRoute
  '/settings': typeof AppDashboardSettingsRoute
  '/updates': typeof AppDashboardUpdatesRoute
  '/editor/$id': typeof AppEditorIdRoute
  '/': typeof AppDashboardIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AppRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/account': typeof AppDashboardAccountRoute
  '/settings': typeof AppDashboardSettingsRoute
  '/updates': typeof AppDashboardUpdatesRoute
  '/editor/$id': typeof AppEditorIdRoute
  '/': typeof AppDashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_app/_dashboard': typeof AppDashboardRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/signup': typeof authSignupRoute
  '/_app/_dashboard/account': typeof AppDashboardAccountRoute
  '/_app/_dashboard/settings': typeof AppDashboardSettingsRoute
  '/_app/_dashboard/updates': typeof AppDashboardUpdatesRoute
  '/_app/editor/$id': typeof AppEditorIdRoute
  '/_app/_dashboard/': typeof AppDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/signup'
    | '/account'
    | '/settings'
    | '/updates'
    | '/editor/$id'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/signup'
    | '/account'
    | '/settings'
    | '/updates'
    | '/editor/$id'
    | '/'
  id:
    | '__root__'
    | '/_app'
    | '/_app/_dashboard'
    | '/(auth)/login'
    | '/(auth)/signup'
    | '/_app/_dashboard/account'
    | '/_app/_dashboard/settings'
    | '/_app/_dashboard/updates'
    | '/_app/editor/$id'
    | '/_app/_dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/(auth)/login",
        "/(auth)/signup"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/_dashboard",
        "/_app/editor/$id"
      ]
    },
    "/_app/_dashboard": {
      "filePath": "_app/_dashboard/route.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_dashboard/account",
        "/_app/_dashboard/settings",
        "/_app/_dashboard/updates",
        "/_app/_dashboard/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup.tsx"
    },
    "/_app/_dashboard/account": {
      "filePath": "_app/_dashboard/account.tsx",
      "parent": "/_app/_dashboard"
    },
    "/_app/_dashboard/settings": {
      "filePath": "_app/_dashboard/settings.tsx",
      "parent": "/_app/_dashboard"
    },
    "/_app/_dashboard/updates": {
      "filePath": "_app/_dashboard/updates.tsx",
      "parent": "/_app/_dashboard"
    },
    "/_app/editor/$id": {
      "filePath": "_app/editor/$id.tsx",
      "parent": "/_app"
    },
    "/_app/_dashboard/": {
      "filePath": "_app/_dashboard/index.tsx",
      "parent": "/_app/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
